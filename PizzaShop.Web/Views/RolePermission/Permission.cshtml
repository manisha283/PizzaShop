@model PizzaShop.Entity.ViewModels.RolePermissionViewModel;

@{
    ViewData["Title"] = "Role";
    Layout = "_Layout";
}

<!-- User heading, search and add button -->
<div class="d-flex justify-content-between align-items-center users mb-3">
    <div>
        <h1 class="blue-text">Permissions</h1>
    </div>
    <div>
        <a asp-action="Role" asp-controller="RolePermission" class="btn btn-white">
            <img src="~/images/icons/chevron-left-blue.svg" alt="">
            <span>Back</span>
        </a> 
    </div>
</div>

<!-- Permission table -->
<div class="row bg-white px-3 py-4 mx-0">

    <div class="col-4 form-floating mb-3 permission-role">
        <input  type="text" class="form-control form-floating" id="role" placeholder="" value="Account Manager" disabled>
        <label for="role">Role</label>
    </div>

    <!-- Table -->
    <div class="table-responsive bg-white px-3">
        <table class="table">
            <thead>
                <tr>
                <th scope="col">
                    <input class="form-check-input" type="checkbox" value="" id="permissionParentCheckbox">
                    Permissions
                </th>
                <th scope="col">Can View</th>
                <th scope="col">Can Add/Edit</th>
                <th scope="col">Can Delete</th>
                </tr>
            </thead>
            <tbody class="table-group-divider">

                @foreach(var permission in Model.Permissions)
                {
                    <tr>
                        <td>
                            <input type="checkbox" value="" class="permissionChildCheckbox">
                            @permission.PermissionName
                        </td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input view-checkbox" type="checkbox" role="switch"  value="true"
                                data-id="@permission.PermissionId"  @(permission.CanView ? "checked" :"")>
                            </div>
                        </td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input add-checkbox" type="checkbox" role="switch"  value="true"
                                data-id="@permission.PermissionId"  @(permission.CanEdit ? "checked" :"")
                                @(!permission.CanView? "disabled" : "" ) >
                            </div>
                        </td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input delete-checkbox" type="checkbox" role="switch"  value="true"
                                data-id="@permission.PermissionId"  @(permission.CanDelete ? "checked" :"")
                                @(!permission.CanEdit? "disabled" : "" )>
                            </div>
                        </td>

                    </tr>
                }
            
            </tbody>
        </table>

    </div>
    <!-- Table ends -->

    <div class="d-flex justify-content-end gap-3 mt-2 mt-sm-0">
        <button class="btn btn-blue" id="updatePermissions">
            Save
        </button>
        <button class="btn btn-white" type="reset">
            Cancel
        </button>
    </div>

</div>

@section Scripts{

    <script>
        $(".view-checkbox").change(function () {
            let id = $(this).data("id");
            let addCheckBox = $(".add-checkbox[data-id='" + id + "']");
            let deleteCheckBox = $(".delete-checkbox[data-id='" + id + "']");
            addCheckBox.prop("checked", false);
            addCheckBox.prop("disabled", !$(this).prop("checked"));
            deleteCheckBox.prop("checked", false);
            deleteCheckBox.prop("disabled", !addCheckBox.prop("checked"));
        });

        $(".add-checkbox").change(function () {
            let id = $(this).data("id");
            let deleteCheckBox = $(".delete-checkbox[data-id='" + id + "']");
            deleteCheckBox.prop("checked", false);
            deleteCheckBox.prop("disabled", !$(this).prop("checked"));
        });

        $("#updatePermissions").click(function(){

            let roleId = '@Model.RoleId';
            var data = [];

            $(".view-checkbox").each(function(){
                var id = $(this).data("id");
                data.push({
                    PermissionId : id,
                    CanView : $(this).prop("checked"),
                    CanEdit : $(".add-checkbox[data-id='"+id+"']").prop("checked"),
                    CanDelete : $(".delete-checkbox[data-id='"+id+"']").prop("checked")
                })
            })

            $.ajax({
                url : '@Url.Action("UpdatePermission", "RolePermission")',
                type : "POST",
                data: {roleId:roleId, model: data},
                success:function(response){
                    if (response.success) {
                        toastr.success(response.message)
                        setTimeout(function(){
                            location.reload();
                        },2000);
                    }
                    else{
                        toastr.error(response.message)
                    }
                },
                error:function(){
                    console.log("error while updating");
                }
            });
        });
    </script>

    @* Intermediate Checkbox For Items Script*@
    <script>

        $(document).on("change", "#permissionParentCheckbox", function () {
            $(".permissionChildCheckbox").each(function () {
                $(this).prop("checked", $("#permissionParentCheckbox").prop("checked"));
            });
        });

        $(document).on("change", ".permissionChildCheckbox", function () {
            let totalchildCheckBox = $(".permissionChildCheckbox").length;
            let checkedchildCheckBox = $(".permissionChildCheckbox:checked").length;
            if (checkedchildCheckBox === totalchildCheckBox) {
                $("#permissionParentCheckbox").prop("indeterminate", false).prop("checked", true);
            }
            else if (checkedchildCheckBox === 0) {
                $("#permissionParentCheckbox").prop("indeterminate", false).prop("checked", false);
            }
            else {
                $("#permissionParentCheckbox").prop("indeterminate", true);
            }
        });


    </script>
}